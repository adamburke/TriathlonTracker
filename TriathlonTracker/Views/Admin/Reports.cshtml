@model IEnumerable<TriathlonTracker.Models.ComplianceReport>
@{
    ViewData["Title"] = "Compliance Reports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-chart-bar me-2"></i>Compliance Reports</h2>
                <div class="d-flex gap-2">
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#generateReportModal">
                        <i class="fas fa-plus me-1"></i>Generate Report
                    </button>
                    <button class="btn btn-success" onclick="scheduleReport()">
                        <i class="fas fa-calendar me-1"></i>Schedule Report
                    </button>
                </div>
            </div>

            <!-- Report Generation Quick Actions -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card border-primary">
                        <div class="card-body text-center">
                            <i class="fas fa-shield-alt fa-2x text-primary mb-2"></i>
                            <h6 class="card-title">GDPR Compliance</h6>
                            <button class="btn btn-outline-primary btn-sm" onclick="generateQuickReport('gdpr')">
                                Generate Now
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-info">
                        <div class="card-body text-center">
                            <i class="fas fa-handshake fa-2x text-info mb-2"></i>
                            <h6 class="card-title">Consent Report</h6>
                            <button class="btn btn-outline-info btn-sm" onclick="generateQuickReport('consent')">
                                Generate Now
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-warning">
                        <div class="card-body text-center">
                            <i class="fas fa-database fa-2x text-warning mb-2"></i>
                            <h6 class="card-title">Data Processing</h6>
                            <button class="btn btn-outline-warning btn-sm" onclick="generateQuickReport('processing')">
                                Generate Now
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-success">
                        <div class="card-body text-center">
                            <i class="fas fa-history fa-2x text-success mb-2"></i>
                            <h6 class="card-title">Audit Trail</h6>
                            <button class="btn btn-outline-success btn-sm" onclick="generateQuickReport('audit')">
                                Generate Now
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Generated Reports -->
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">Generated Reports</h5>
                        <div class="d-flex gap-2">
                            <select class="form-select form-select-sm" id="reportFilter" onchange="filterReports()">
                                <option value="">All Reports</option>
                                <option value="gdpr">GDPR Compliance</option>
                                <option value="consent">Consent Reports</option>
                                <option value="processing">Data Processing</option>
                                <option value="audit">Audit Reports</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Report Name</th>
                                        <th>Type</th>
                                        <th>Period</th>
                                        <th>Generated</th>
                                        <th>Status</th>
                                        <th>Size</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var report in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div>
                                                    <strong>@report.Title</strong>
                                                    <br><small class="text-muted">@report.Type Report</small>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge @(report.Type switch {
                                                    "GDPR" => "bg-primary",
                                                    "Consent" => "bg-info",
                                                    "Processing" => "bg-warning",
                                                    "Audit" => "bg-success",
                                                    _ => "bg-secondary"
                                                })">
                                                    @report.Type
                                                </span>
                                            </td>
                                            <td>
                                                <div class="small">
                                                    <div>@report.PeriodStart.ToString("MMM dd, yyyy")</div>
                                                    <div>to @report.PeriodEnd.ToString("MMM dd, yyyy")</div>
                                                </div>
                                            </td>
                                            <td>@report.GeneratedDate.ToString("MMM dd, yyyy HH:mm")</td>
                                            <td>
                                                <span class="badge @(report.Status switch {
                                                    "Generated" => "bg-success",
                                                    "Processing" => "bg-primary",
                                                    "Failed" => "bg-danger",
                                                    _ => "bg-secondary"
                                                })">
                                                    @report.Status
                                                </span>
                                            </td>
                                            <td>N/A</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-sm btn-outline-primary" onclick="viewReport('@report.Id')">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <div class="btn-group" role="group">
                                                        <button class="btn btn-sm btn-outline-success dropdown-toggle" data-bs-toggle="dropdown">
                                                            <i class="fas fa-download"></i>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            <li><a class="dropdown-item" href="@Url.Action("ExportReport", new { reportId = report.Id, format = "pdf" })">
                                                                <i class="fas fa-file-pdf me-1"></i>PDF
                                                            </a></li>
                                                            <li><a class="dropdown-item" href="@Url.Action("ExportReport", new { reportId = report.Id, format = "excel" })">
                                                                <i class="fas fa-file-excel me-1"></i>Excel
                                                            </a></li>
                                                            <li><a class="dropdown-item" href="@Url.Action("ExportReport", new { reportId = report.Id, format = "csv" })">
                                                                <i class="fas fa-file-csv me-1"></i>CSV
                                                            </a></li>
                                                        </ul>
                                                    </div>
                                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteReport('@report.Id')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        <nav aria-label="Reports pagination" class="mt-4">
                            <ul class="pagination justify-content-center">
                                @if (ViewBag.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Reports", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">Previous</a>
                                    </li>
                                }
                                
                                @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.CurrentPage + 2, ViewBag.TotalPages ?? ViewBag.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Reports", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                                    </li>
                                }
                                
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Reports", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">Next</a>
                                </li>
                            </ul>
                        </nav>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-chart-bar fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No reports generated yet</h4>
                            <p class="text-muted">Generate your first compliance report to get started.</p>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#generateReportModal">
                                <i class="fas fa-plus me-1"></i>Generate Report
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Generate Report Modal -->
<div class="modal fade" id="generateReportModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Generate Compliance Report</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="generateReportForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="reportType" class="form-label">Report Type</label>
                                <select class="form-select" id="reportType" required>
                                    <option value="">Select report type...</option>
                                    <option value="gdpr">GDPR Compliance Report</option>
                                    <option value="consent">Consent Management Report</option>
                                    <option value="processing">Data Processing Report</option>
                                    <option value="audit">Audit Trail Report</option>
                                    <option value="breach">Data Breach Report</option>
                                    <option value="retention">Data Retention Report</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="reportName" class="form-label">Report Name</label>
                                <input type="text" class="form-control" id="reportName" placeholder="Auto-generated based on type and date" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="startDate" class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="startDate" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="endDate" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="endDate" required>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="reportDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="reportDescription" rows="3" placeholder="Optional description for this report"></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Include Sections</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="includeSummary" checked>
                                    <label class="form-check-label" for="includeSummary">Executive Summary</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="includeDetails" checked>
                                    <label class="form-check-label" for="includeDetails">Detailed Analysis</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="includeCharts" checked>
                                    <label class="form-check-label" for="includeCharts">Charts and Graphs</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="includeRecommendations">
                                    <label class="form-check-label" for="includeRecommendations">Recommendations</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Export Formats</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="formatPdf" checked>
                                    <label class="form-check-label" for="formatPdf">PDF</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="formatExcel">
                                    <label class="form-check-label" for="formatExcel">Excel</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="formatCsv">
                                    <label class="form-check-label" for="formatCsv">CSV</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="generateReport()">
                    <i class="fas fa-cog me-1"></i>Generate Report
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set default dates
        document.addEventListener('DOMContentLoaded', function() {
            const endDate = new Date();
            const startDate = new Date();
            startDate.setMonth(startDate.getMonth() - 1);
            
            document.getElementById('endDate').value = endDate.toISOString().split('T')[0];
            document.getElementById('startDate').value = startDate.toISOString().split('T')[0];
        });

        // Update report name based on type
        document.getElementById('reportType').addEventListener('change', function() {
            const reportName = document.getElementById('reportName');
            const type = this.value;
            const date = new Date().toISOString().split('T')[0];
            
            if (type) {
                const typeNames = {
                    'gdpr': 'GDPR Compliance Report',
                    'consent': 'Consent Management Report',
                    'processing': 'Data Processing Report',
                    'audit': 'Audit Trail Report',
                    'breach': 'Data Breach Report',
                    'retention': 'Data Retention Report'
                };
                reportName.value = `${typeNames[type]} - ${date}`;
            } else {
                reportName.value = '';
            }
        });

        function generateQuickReport(type) {
            const endDate = new Date();
            const startDate = new Date();
            startDate.setMonth(startDate.getMonth() - 1);
            
            const data = {
                reportType: type,
                startDate: startDate.toISOString().split('T')[0],
                endDate: endDate.toISOString().split('T')[0]
            };

            fetch('@Url.Action("GenerateReport")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    alert('Report generation started. You will be notified when it\'s ready.');
                    setTimeout(() => location.reload(), 2000);
                } else {
                    alert('Error: ' + result.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while generating the report.');
            });
        }

        function generateReport() {
            const form = document.getElementById('generateReportForm');
            
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const data = {
                reportType: document.getElementById('reportType').value,
                startDate: document.getElementById('startDate').value,
                endDate: document.getElementById('endDate').value,
                description: document.getElementById('reportDescription').value
            };

            fetch('@Url.Action("GenerateReport")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    alert('Report generation started successfully.');
                    bootstrap.Modal.getInstance(document.getElementById('generateReportModal')).hide();
                    setTimeout(() => location.reload(), 2000);
                } else {
                    alert('Error: ' + result.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while generating the report.');
            });
        }

        function viewReport(reportId) {
            alert('Report viewer would be implemented here for report: ' + reportId);
        }

        function deleteReport(reportId) {
            if (confirm('Are you sure you want to delete this report? This action cannot be undone.')) {
                alert('Report deletion functionality would be implemented here for report: ' + reportId);
            }
        }

        function filterReports() {
            const filter = document.getElementById('reportFilter').value;
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const reportType = row.querySelector('.badge').textContent.toLowerCase();
                if (!filter || reportType.includes(filter)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function scheduleReport() {
            alert('Report scheduling functionality would be implemented here.');
        }
    </script>
}