@model IEnumerable<TriathlonTracker.Models.UserGdprStatus>
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-users me-2"></i>User Management</h2>
                <div class="d-flex gap-2">
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#bulkActionModal">
                        <i class="fas fa-tasks me-1"></i>Bulk Actions
                    </button>
                    <button class="btn btn-success" onclick="exportUsers()">
                        <i class="fas fa-download me-1"></i>Export Users
                    </button>
                </div>
            </div>

            <!-- Search and Filter -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-6">
                            <label for="search" class="form-label">Search Users</label>
                            <input type="text" class="form-control" id="search" name="search" value="@ViewBag.Search" placeholder="Search by name, email, or ID">
                        </div>
                        <div class="col-md-3">
                            <label for="pageSize" class="form-label">Results per page</label>
                            <select class="form-select" id="pageSize" name="pageSize">
                                <option value="25" selected="@(ViewBag.PageSize == 25)">25</option>
                                <option value="50" selected="@(ViewBag.PageSize == 50)">50</option>
                                <option value="100" selected="@(ViewBag.PageSize == 100)">100</option>
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="fas fa-search me-1"></i>Search
                            </button>
                            <a href="@Url.Action("Users")" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-1"></i>Clear
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Users Table -->
            <div class="card">
                <div class="card-body">
                    @if (Model?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th><input type="checkbox" id="selectAll" class="form-check-input"></th>
                                        <th>User</th>
                                        <th>Email</th>
                                        <th>Registration Date</th>
                                        <th>Consent Status</th>
                                        <th>Data Requests</th>
                                        <th>Last Activity</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model)
                                    {
                                        <tr>
                                            <td><input type="checkbox" class="form-check-input user-checkbox" value="@user.UserId"></td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-sm bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-2">
                                                        @user.Name?.Substring(0, 1).ToUpper()
                                                    </div>
                                                    <div>
                                                        <div class="fw-bold">@user.Name</div>
                                                        <small class="text-muted">ID: @user.UserId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>@user.Email</td>
                                            <td>@user.CreatedDate.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <span class="badge @(user.HasConsent ? "bg-success" : "bg-danger")">
                                                    @(user.HasConsent ? "Active" : "Inactive")
                                                </span>
                                                @if (user.ConsentDate.HasValue)
                                                {
                                                    <br><small class="text-muted">Since: @user.ConsentDate.Value.ToString("MMM dd, yyyy")</small>
                                                }
                                            </td>
                                            <td>
                                                <div class="small">
                                                    <div>Pending: @user.PendingRequests</div>
                                                    <div>Violations: @(user.HasRetentionViolation ? "Yes" : "No")</div>
                                                </div>
                                            </td>
                                            <td>
                                                @if (user.LastDataAccess.HasValue)
                                                {
                                                    <span>@user.LastDataAccess.Value.ToString("MMM dd, yyyy")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Never</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("UserDetails", new { userId = user.UserId })" class="btn btn-sm btn-outline-primary"
                                                       title="View user GDPR details and status" data-bs-toggle="tooltip">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <button class="btn btn-sm btn-outline-warning" onclick="editUser('@user.UserId')"
                                                            title="Edit user information and settings" data-bs-toggle="tooltip">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" onclick="confirmDeleteUser('@user.UserId', '@user.Name')"
                                                            title="Permanently delete user account" data-bs-toggle="tooltip">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        <nav aria-label="User pagination" class="mt-4">
                            <ul class="pagination justify-content-center">
                                @if (ViewBag.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Users", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize, search = ViewBag.Search })">Previous</a>
                                    </li>
                                }
                                
                                @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.CurrentPage + 2, ViewBag.TotalPages ?? ViewBag.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Users", new { page = i, pageSize = ViewBag.PageSize, search = ViewBag.Search })">@i</a>
                                    </li>
                                }
                                
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Users", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize, search = ViewBag.Search })">Next</a>
                                </li>
                            </ul>
                        </nav>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No users found</h4>
                            <p class="text-muted">@(string.IsNullOrEmpty(ViewBag.Search?.ToString()) ? "No users are registered yet." : "No users match your search criteria.")</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Action Modal -->
<div class="modal fade" id="bulkActionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Bulk Actions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="bulkActionForm">
                    <div class="mb-3">
                        <label for="bulkAction" class="form-label">Select Action</label>
                        <select class="form-select" id="bulkAction" required>
                            <option value="">Choose action...</option>
                            <option value="grant_consent">Grant Consent</option>
                            <option value="revoke_consent">Revoke Consent</option>
                            <option value="export_data">Export User Data</option>
                            <option value="send_notification">Send Notification</option>
                        </select>
                    </div>
                    <div class="mb-3" id="consentTypeGroup" style="display: none;">
                        <label for="consentType" class="form-label">Consent Type</label>
                        <select class="form-select" id="consentType">
                            <option value="Marketing">Marketing</option>
                            <option value="Analytics">Analytics</option>
                            <option value="Functional">Functional</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="bulkReason" class="form-label">Reason</label>
                        <textarea class="form-control" id="bulkReason" rows="3" placeholder="Provide reason for this action..." required></textarea>
                    </div>
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-1"></i>
                        <span id="selectedCount">0</span> users selected for this action.
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="executeBulkAction()">Execute Action</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Select all functionality
        document.getElementById('selectAll').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.user-checkbox');
            checkboxes.forEach(cb => cb.checked = this.checked);
            updateSelectedCount();
        });

        // Update selected count
        function updateSelectedCount() {
            const selected = document.querySelectorAll('.user-checkbox:checked').length;
            document.getElementById('selectedCount').textContent = selected;
        }

        // Listen for individual checkbox changes
        document.querySelectorAll('.user-checkbox').forEach(cb => {
            cb.addEventListener('change', updateSelectedCount);
        });

        // Show/hide consent type based on action
        document.getElementById('bulkAction').addEventListener('change', function() {
            const consentGroup = document.getElementById('consentTypeGroup');
            if (this.value === 'grant_consent' || this.value === 'revoke_consent') {
                consentGroup.style.display = 'block';
            } else {
                consentGroup.style.display = 'none';
            }
        });

        // Execute bulk action
        function executeBulkAction() {
            const selectedUsers = Array.from(document.querySelectorAll('.user-checkbox:checked')).map(cb => cb.value);
            const action = document.getElementById('bulkAction').value;
            const reason = document.getElementById('bulkReason').value;
            const consentType = document.getElementById('consentType').value;

            if (selectedUsers.length === 0) {
                alert('Please select at least one user.');
                return;
            }

            if (!action || !reason) {
                alert('Please fill in all required fields.');
                return;
            }

            const data = {
                userIds: selectedUsers,
                operation: action,
                reason: reason,
                consentType: consentType
            };

            fetch('@Url.Action("BulkConsentOperation")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    alert('Bulk action completed successfully.');
                    location.reload();
                } else {
                    alert('Error: ' + result.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while executing the bulk action.');
            });
        }

        // Export users
        function exportUsers() {
            window.location.href = '@Url.Action("ExportUsers")';
        }

        // Edit user
        function editUser(userId) {
            window.location.href = '/Admin/User/' + userId + '/Edit';
        }

        // Confirm delete user
        function confirmDeleteUser(userId, userName) {
            if (confirm('Are you sure you want to delete user "' + userName + '"? This action cannot be undone.')) {
                fetch('/Admin/User/' + userId + '/Delete', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error deleting user. Please try again.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the user.');
                });
            }
        }

        // Initialize tooltips and other functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Bootstrap tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            updateSelectedCount();
        });
    </script>
}